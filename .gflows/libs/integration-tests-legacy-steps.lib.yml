#@ load("workflows.lib.yml", "pull_request_defaults")
#@ load("workflows.lib.yml", "login_docker")
#@ load("workflows.lib.yml", "checkout_private_actions")
#@ load("workflows.lib.yml", "checkout")
#@ load("workflows.lib.yml", "generate_diagnostic_password")
---
#@ def integration_tests_legacy_steps(repository, registries, environment, test_suites):
- name: Checkout tests repository
  uses: actions/checkout@v2
  with:
    repository: covergo/integration-testing
    ref: #@ repository.branch
    token: #@ repository.token
- #@ checkout_private_actions()
#@ for registry in registries:
- #@ login_docker(registry)
#@ end
- name: Prepare environment for integration tests
  uses: ./launch_environment
  with:
    mongo-user: #@ environment.mongo_user 
    mongo-password: #@ environment.mongo_password 
    mongo-url: #@ environment.mongo_url 
    service-under-test: #@ environment.service_under_test.name
    image-under-test: #@ environment.service_under_test.image
- name: Install yarn
  run: yarn install
#@ for test_case in test_suites.tests:
- name: #@ "Run {} tests".format(test_case)
  run: #@ "yarn {}".format(test_case) 
#@ end
- name: Gather test environment logs
  if: ${{ always() }}
  uses: ./.github/actions/docker-diagnose
  with:
    filter: name=covergo*
    diagnostic-result-path: diagnostics
    include-compose: true
    encrypt-password: #@ generate_diagnostic_password(environment)
- name: Stop compose
  if: ${{ always() }}
  run: docker-compose down --remove-orphans
- name: Upload test environment logs
  if: ${{ always() }}
  uses: actions/upload-artifact@v2
  with:
    name: #@ "{} diagnostics".format(test_suites.name)
    path: diagnostics/*
#@ end